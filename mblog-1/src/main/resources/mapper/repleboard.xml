<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo">
	<select id="qnaList" parameterType="java.util.HashMap"
		resultType="map">
		SELECT q.qna_bno, q.qna_title, q.qna_content
		, q.qna_type , q.qna_hit,
		q.qna_date, q.qna_secret
		, m.mem_name FROM QNA q, MEMBER230324 m
		WHERE
		q.mem_no = m.mem_no
		<if test='qna_type!=null and !qna_type.equals("전체")'> <!-- KhMyFilter 조건 검색시 사용 -->
			AND qna_type = #{qna_type}
		</if>
		<if test='mem_no!=null'> <!-- 회원 고유번호별 조건검색시 사용 -->
			AND m.mem_no = #{mem_no}
		</if>
		<if test='qna_bno!=null'> <!-- 글번호 조건검색시 사용 -->
			AND q.qna_bno = #{qna_bno}
		</if>
		<if test='content!=null'>
			<choose>
				<!-- #{content}는 서치바에서 입력한 value값이다 -->
				<when test='condition!=null and condition.equals("제목")'>
					AND qna_title LIKE '%' || #{content} || '%'
				</when>
				<when test='condition!=null and condition.equals("내용")'>
					AND qna_content LIKE '%' || #{content} || '%'
				</when>
				<when test='condition!=null and condition.equals("작성자")'>
					AND mem_name LIKE '%' || #{content} || '%'
				</when>
			</choose>
		</if>
		ORDER BY qna_bno desc
	</select>

	<select id="qnaDetail" parameterType="java.util.HashMap"
		resultType="map">
		SELECT q.qna_bno, q.qna_title, q.qna_content
		, q.qna_type , q.qna_hit,
		q.qna_date, q.qna_secret
		, m.mem_name , m.mem_no , c.comm_no
		FROM qna q,
		MEMBER230324 m
		, (SELECT count(comm_no) comm_no, qna_bno
		FROM
		qna_comment
		GROUP BY
		qna_bno
		)c
		WHERE q.mem_no = m.mem_no
		AND q.qna_bno =
		c.qna_bno(+)
		<if test='mem_no!=null'>
			AND m.mem_no = #{mem_no}
		</if>
		<if test='qna_bno!=null'> <!-- setNull(1,1111)에러 타입, 부적합한 열 유형 Integer.parseInt() -->
			AND q.qna_bno = #{qna_bno}
		</if>
	</select>

	<!-- @RequestParam - Map타입이 올 수 있다 - GET방식 요청 - 요청 Header 담김 - 인터셉트 - 캐시에 
		있는 정보가 다시 출력될 수 있음 :문제점 - 노출 (URL) - 보안취약 - 조회 @RequestBody - POST방식 요청 - 
		단위테스트 불가 - 그러니까 postman 테스트 가능함 - 요청 Body담김 - 인터셉트 불가함 - 무조건 서버로 전달 :VO Map 
		원시형 타입 모두 가능함 Q - mem_no는 어디서 가져오나용 - 인증을 어디서 하나용 - App.jsx의 useEffect가 A 
		- member230324 qna_type 즉 질문 타입은 상수로 양도를 줌 qna_secret에는 비번을 입력 받음 비번이 널이면 
		공개 / 널이 아니면 비공개 처리 가능? 생각해볼 문제 화면에서 가져올 컬럼의 종류는 몇 가지? 세션이나 쿠키에서 또는 세션스토리지에서 
		가져와야 하는 컬럼이 있을까? 상수 넣을 수 있는 (또는 넣어야 하는) 컬럼이 존재하나? 만일 존재한다면 어떤 컬럼인지 말해보자 하나 
		더 작성자는 입력받도록 화면을 그려야하나? 아님 자동으로 결정할 수 있는건가? -->
	<insert id="qnaInsert" parameterType="map"
		useGeneratedKeys="true" keyColumn="qna_bno" keyProperty="qna_bno">
		INSERT INTO
		qna (qna_bno ,
		mem_no,
		qna_title ,
		qna_content,
		qna_type,
		qna_secret,
		qna_hit,
		qna_date)
		VALUES(
		qna_seq.nextval,
		#{mem_no},
		#{qna_title},
		#{qna_content},
		#{qna_type},
		#{qna_secret},
		0,
		to_char(sysdate,
		'YYYY-MM-DD'))
	</insert>
	<delete id="qnaDelete" parameterType="map">
		DELETE
		FROM qna
		WHERE
		qna_bno=#{qna_bno}
	</delete>
	<!-- 이 쿼리문은 언제 어디서 왜 호출되어야 할가요? Controller Logic Dao 다 필요한 경우가 있고 - 글쓰기 
		Controller Logic까지만 필요한 경우가 있고 - imageUpload Dao만 필요한 경우가 있다. -->
	<update id="qnaHit" parameterType="map">
		<choose>
			<when test='id.equals("notice")'>
				UPDATE notice SET not_hit = not_hit +1
				WHERE not_bno =
				#{not_bno}
			</when>
			<when test='id.equals("qna")'>
				UPDATE qna SET qna_hit = qna_hit +1
				WHERE qna_bno =
				#{qna_bno}
			</when>
			<when test='id.equals("review")'>
				UPDATE review SET rev_hit = rev_hit +1
				WHERE rev_bno =
				#{rev_bno}
			</when>
		</choose>
	</update>
	<update id="qnaUpdate" parameterType="map">
		UPDATE QNA
		SET
		<if test='qna_title!=null'>
			QNA_TITLE = #{qna_title}
		</if>
		<if test='qna_content!=null'>
			QNA_CONTENT = #{qna_content}
		</if>
		<if test='qna_type!=null'>
			QNA_TYPE = #{qna_type}
		</if>
		<if test='qna_secret!=null'>
			QNA_SECRET = #{qna_secret}
		</if>
		QNA_UPDATE = TO_CHAR(sysdate, 'YYYY-MM-DD HH24:MI:SS')
	</update>
	<!--==================================================================================================== -->
	<select id="fileList" parameterType="map" resultType="map">
		SELECT
		file_name, file_size
		FROM mblog_file
		WHERE qna_bno = #{qna_bno}
	</select>

	<insert id="fileInsert" parameterType="map">
		INSERT INTO
		mblog_file(
		file_no,
		file_path,
		file_name,
		file_size
		)
		VALUES(
		mblog_file_seq.nextval,
		#{file_path},
		#{file_name},
		#{file_size})
	</insert>

	<update id="fileUpdate" parameterType="list">
		<foreach collection="list" item="item" separator=";"
			open="DECLARE BEGIN" close="; END;">
			UPDATE MBLOG_FILE
			SET BOARD_TYPE='qna',
			QNA_BNO=#{item.qna_bno}
			WHERE FILE_NAME=LTRIM(#{item.file_name})
		</foreach>
	</update>
</mapper>